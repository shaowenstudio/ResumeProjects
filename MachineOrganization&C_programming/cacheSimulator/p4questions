Name:	Shaowen liu
Section: 001

Assignment 4 questions.
Do NOT remove the questions from this file.
Please write and indent your answers in this file.

For ALL cache simulations, use a capacity of 16384 bytes, and set associativity of 1, for both 
the I-cache and the D-cache.

Sample command line:
/p/course/cs354-common/public/cache/pin -injection child -t /p/course/cs354-common/public/cache/source/tools/Memory/obj-ia32/allcache.so -is 16384 -ia 1 -ib 64 -ds 16384 -da 1 -db <block-size> -- shaowen

Replace "yourexe" with the name of your executable.

-------
cache1D
-------

1.1 What do you get from running pin with a block size of 4 bytes? (Pasting the output here is fine!)
Data cache misses:              18645
Data cache references:          103173
1.2 Calculate the hit ratio for the D-cache with a block size of 4 bytes?
Data cache hit ratio = 1 – 18645/103173 = 0.819284115
2.1 What do you get from running pin with a block size of 32 bytes? (Pasting the output here is fine!)
Data cache misses:              3610
Data cache references:          103173
2.2 Calculate the hit ratio for the D-cache with a block size of 32 bytes?
Data cache hit ratio = 1 – 3610/103173 = 0.9650102255

3.1 What do you get from running pin with a block size of 64 bytes? (Pasting the output here is fine!)
Data cache misses:              2289
Data cache references:          103173
3.2 Calculate the hit ratio for the D-cache with a block size of 64 bytes?
Data cache hit ratio = 1 – 2289/103173 = 0.977813963

4. (to be answered without running pin)
For this question, assume that the 100,000 elements long integer array that you allocated starts at address 0x50000000 in memory,
the size of an integer is 4 bytes  and the D-cache is initially empty. 
As you READ the integers in the array one-by-one, starting at index 0, 
how many D-cache misses will you see for reading the first 40 integers when the cache block size is:

a) 4 bytes: 	10
b) 32 bytes: 	2
c) 64 bytes: 	1

5. Based on simulations you ran for questions 1, 2 and 3, which block size is best for the D-cache?  
Why? In what way does the block size affect the hit ratio for this program?
	The 64 bytes D-cache is the best. 
	Its hit ratio is the highest one.
	The size of the block determines how many data it can load to cache for one time. The more data it can load for one time, the bigger the hit ratio will be.

-----------
cache2Drows
-----------

6.1 What do you get from running pin with a block size of 64 bytes? (Pasting the output here is fine!)
Data cache misses:              107042
Data cache references:          12058173
6.2 Calculate the hit ratio for the D-cache with a block size of 64 bytes?
Data cache hit ratio = 1 – 107042/12058173= 0.99112287

-----------
cache2Dcols
-----------

7.1 What do you get from running pin with a block size of 64 bytes? (Pasting the output here is fine!)
Data cache misses:              1507416
Data cache references:          12045673
7.2 Calculate the hit ratio for the D-cache with a block size of 64 bytes?
Data cache hit ratio = 1 – 1507416/12045673= 0.8748582997

-----------------------------------------
Comparison of cache2Drows and cache2Dcols
-----------------------------------------
8. (to be answered without running pin) 
For this question, assume that the 2-D integer array you allocated starts at address 0x40000000 in memory,
the size of an integer is 4 bytes, D-cache block size is 64 bytes and the D-cache is initially empty.
As you READ the integers in the 2-D array one-by-one, starting with element array[0,0],
how many D-cache misses will you see for reading the first 10 integers in case of:

a) cache2Drows: 1
b) cache2Dcols:	10

9. Compare the performance (hit ratios) of the D-cache for the 2 programs based on simulations of questions 6 and 7.
Explain any difference/ lack of difference that you observe. Your answer should be in the form of "There is a difference/no difference BECAUSE ____".
There is a difference BECAUSE cache2Drows.c assigns values in the array one by one in alignment, while, in cache2Dcols.c, the distance of two newly assigned data in the array are 3000.
